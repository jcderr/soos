#!/bin/bash

DESCRIPTION="Bring up docker containers"
USAGE="usage: sooz up [--app] [--db] [--redis]"
HELP=""

start_or_run() {
    [ -z "$($DOCKER_BIN images | grep $DOCKER_APP_IMG)" ] && subcommand build
    RESULT="" 
    CONTAINER=$($DOCKER_BIN ps -a | grep "$DOCKER_APP_IMG[[:space:]]")
    if [ -z "${CONTAINER}" ]; then 
        RESULT=$($DOCKER_BIN run -d $DOCKER_VOLUMES $DOCKER_PORTS --name=${DOCKER_APP_IMG} app /opt/app/bin/docker/run 0.0.0.0:8000)
    else
        RESULT=$($DOCKER_BIN start ${DOCKER_APP_IMG})
    fi

    info "Container $DOCKER_APP_IMG started"
}

main() {
    OPT_APP=""
    OPT_DB=""
    OPT_REDIS=""

    while [ $# -gt 0 ]; do
        case $1 in
            --app)
            OPT_APP="Y"
            ;;
            
            --db)
            OPT_DB="Y"
            ;;
    
            --redis)
            OPT_REDIS="Y"
            ;;

            "")
            break
            ;;
            
            
            *)
            echo $USAGE; exit 1;
            ;;
        esac
        
        shift
    done
    
    if [ -z "${OPT_APP}${OPT_DB}${OPT_REDIS}" ]; then
        # in this demo, we're just running an app server with sqlite, no other services needed
        OPT_APP="Y"
        #OPT_DB="Y"
        #OPT_REDIS="Y"
    fi
    
	# check vagrant up/status
	if [ -z "$(vagrant status box | grep running)" ]; then
	  info "Starting the VM"
		vagrant up box
	else
	  info "VM is already running"
	fi
    
    [ "$OPT_APP" = "Y" ] && start_or_run
    [ "$OPT_DB" = "Y" ] && warn "db container not supported"
    [ "$OPT_REDIS" = "Y" ] && warn "redis container not supported"
    
}

source "$(dirname $0)/sooz-common"
